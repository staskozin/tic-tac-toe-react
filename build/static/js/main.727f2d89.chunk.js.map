{"version":3,"sources":["Square.js","Board.js","Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","key","rows","index","m","push","renderSquare","renderRows","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","Math","floor","join","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"iNAUeA,MARf,SAAiBC,GACf,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,QCkCEC,E,qLAlCCC,GAAI,IAAD,OACf,OAAO,kBAAC,EAAD,CACGF,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,IAClCG,IAAKH,M,mCAOf,IAFA,IAAII,EAAO,GACPC,EAAQ,EACHL,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAIE,EAAU,GACHI,EAAID,EAAQ,EAAGA,EAAQC,EAAGD,IACnCH,EAAQK,KAAKN,KAAKO,aAAaH,IACnCD,EAAKG,KAAK,yBAAKJ,IAAKH,EAAGJ,UAAU,aAAY,yBAAKA,UAAU,mBAAmBI,EAAE,GAASE,IAE1F,OAAOE,I,+BAIP,OACE,6BACGH,KAAKQ,aACN,yBAAKb,UAAU,mBACb,yBAAKA,UAAU,SAAf,KACA,yBAAKA,UAAU,SAAf,KACA,yBAAKA,UAAU,SAAf,W,GA5BUc,IAAMC,WC8EXC,E,YA7Eb,WAAajB,GAAQ,IAAD,8BAClB,4CAAMA,KACDkB,MAAQ,CACXC,QAAS,CACP,CACEZ,QAASa,MAAM,GAAGC,KAAK,MACvBX,MAAO,IAGXY,WAAY,EACZC,SAAS,GAVO,E,yEAcPlB,GACX,IAAMc,EAAUb,KAAKY,MAAMC,QAAQK,MAAM,EAAGlB,KAAKY,MAAMI,WAAa,GAE9Df,EADUY,EAAQA,EAAQM,OAAS,GACjBlB,QAAQiB,QAE5BE,EAAgBnB,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKY,MAAMK,QAAU,IAAM,IACxCjB,KAAKqB,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACvBrB,QAASA,EACTG,MAAOL,KAETiB,WAAYH,EAAQM,OACpBF,SAAUjB,KAAKY,MAAMK,a,6BAIjBM,GACNvB,KAAKqB,SAAS,CACZL,WAAYO,EACZN,QAAUM,EAAO,IAAO,M,+BAIjB,IAcLC,EAdI,OACFX,EAAUb,KAAKY,MAAMC,QACrBY,EAAUZ,EAAQb,KAAKY,MAAMI,YAC7BU,EAASN,EAAgBK,EAAQxB,QAAQiB,SAEzCS,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAqDuB9B,EArDjB+B,EAAOD,EAAO,iBAAmBA,EAAO,MAqDvB9B,EArDkDwB,EAAKnB,MAsD3E,CAACL,EAAI,EAAI,EAAGgC,KAAKC,MAAMjC,EAAI,GAAK,IAtDkDkC,KAAK,MAAQ,IAAM,gBACxG,OACE,wBAAI/B,IAAK2B,GACP,4BAAQjC,QAAS,kBAAM,EAAKsC,OAAOL,KAAQC,OAWjD,OAJEN,EADEE,EACOA,EAAS,QAET,iBAAmB1B,KAAKY,MAAMK,QAAU,IAAM,KAGvD,yBAAKtB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEM,QAASwB,EAAQxB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAKoC,YAAYpC,OAGrC,yBAAKJ,UAAU,aACb,6BAAM6B,GACN,4BAAKG,S,GAvEIlB,IAAMC,WAgFzB,SAASU,EAAiBnB,GAWxB,IAVA,IAAMmC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEArC,EAAI,EAAGA,EAAIqC,EAAMjB,OAAQpB,IAAK,CAAC,IAAD,cACnBqC,EAAMrC,GADa,GAC9BsC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAItC,EAAQoC,IAAMpC,EAAQoC,KAAOpC,EAAQqC,IAAMrC,EAAQoC,KAAOpC,EAAQsC,GACpE,OAAOtC,EAAQoC,GAGnB,OAAO,KC/FTG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.727f2d89.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Square (props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Square\r\n","import React from 'react'\r\n\r\nimport Square from './Square'\r\n\r\nclass Board extends React.Component {\r\n  renderSquare (i) {\r\n    return <Square \r\n              value={this.props.squares[i]}\r\n              onClick={() => this.props.onClick(i)}\r\n              key={i}\r\n           />\r\n  }\r\n\r\n  renderRows () {\r\n    let rows = []\r\n    let index = 0\r\n    for (let i = 0; i < 3; i++) {\r\n      let squares = []\r\n      for (const m = index + 3; index < m; index++)\r\n        squares.push(this.renderSquare(index))\r\n    rows.push(<div key={i} className=\"board-row\"><div className=\"index index_ver\">{i+1}</div>{squares}</div>)\r\n    }\r\n    return rows\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        {this.renderRows()}\r\n        <div className=\"board-row_index\">\r\n          <div className=\"index\">1</div>\r\n          <div className=\"index\">2</div>\r\n          <div className=\"index\">3</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Board\r\n","import React from 'react'\r\n\r\nimport Board from './Board'\r\n\r\nclass Game extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n          index: 0\r\n        }\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true\r\n    }\r\n  }\r\n\r\n  handleClick (i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\r\n    const current = history[history.length - 1]\r\n    const squares = current.squares.slice()\r\n\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        index: i\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    })\r\n  }\r\n\r\n  jumpTo (step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const history = this.state.history\r\n    const current = history[this.state.stepNumber]\r\n    const winner = calculateWinner(current.squares.slice())\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? 'Jump to move #' + move + ' (' + getCoordsFromSquare(step.index).join(', ') + ')' : 'Jump to start'\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    let status\r\n    if (winner)\r\n      status = winner + ' wins'\r\n    else\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game\r\n\r\nfunction calculateWinner (squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ]\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i]\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a]\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nfunction getCoordsFromSquare(i) {\r\n  return [i % 3 + 1, Math.floor(i / 3) + 1]\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\n\nimport Game from './Game'\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}